---
openapi: 3.0.0
info:
  title: Assignment Task App API
  description: |-
    - The API for a basic tasks assignment app.
    - There are 2 type of users in app: admin, member.
  contact:
    email: anhduydp123@gmail.com
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Anhduy-git/AssignmentTaskAPI/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://ad-order-app.herokuapp.com
  description: Production server.
- url: http://localhost:3008
  description: Development server.
paths:
  /auth/signin:
    post:
      tags:
      - Authentication
      description: Sign in user
      operationId: signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth_signin_body'
            example:
              email: anhduydp123@gmail.com
              password: anhduy123
      responses:
        "200":
          description: Sign in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        "403":
          description: Sign in failed (Authentication failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 403
                message: Authentication failed
                error: Forbidden
  /auth/signup:
    post:
      tags:
      - Authentication
      description: Sign up a user
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInformation'
      responses:
        "201":
          description: Sign up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        "403":
          description: Sign up failed (Email has been used)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 403
                message: Email has been used
                error: Forbidden
  /users/members:
    get:
      tags:
      - User
      description: Get all members in database
      operationId: getAllMembers
      responses:
        "200":
          description: Get all members successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
              example:
              - id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                email: anhduydp123@gmail.com
                firstName: Duy
                lastName: Anh
                role: 0
        "401":
          description: Get members failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
  /users/me:
    get:
      tags:
      - User
      description: Get current user
      operationId: getMe
      responses:
        "200":
          description: Get user successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                email: anhduydp123@gmail.com
                firstName: Duy
                lastName: Anh
                role: 0
        "401":
          description: Get user failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
  /users/{id}:
    patch:
      tags:
      - User
      description: Update user by id
      operationId: updateUserById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example:
              role: 0
      responses:
        "200":
          description: Update user successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                email: anhduydp123@gmail.com
                firstName: Duy
                lastName: Anh
                role: 0
        "401":
          description: Update user failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
  /tasks:
    get:
      tags:
      - Task
      description: Get tasks
      operationId: getTasks
      parameters:
      - name: userId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: Get tasks successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_2'
              example:
              - id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                title: Nau com
                description: nau ngon
                deadline: 2022-04-07T17:00:00.000Z
                priority: 100
                isDone: false
                userId: 1
        "401":
          description: Get tasks failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
    post:
      tags:
      - Task
      description: Create new task
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInformation'
      responses:
        "200":
          description: Create new task successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                title: Nau com
                description: nau ngon
                deadline: 2022-04-07T17:00:00.000Z
                priority: 100
                isDone: false
                userId: 1
        "401":
          description: Create new task failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
  /tasks/{id}:
    delete:
      tags:
      - Task
      description: Delete task
      operationId: deleteTask
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1
      responses:
        "204":
          description: Delete task successfully
        "401":
          description: Delete task failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
    patch:
      tags:
      - Task
      description: Update task
      operationId: updateTask
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
        example: 1
      responses:
        "200":
          description: Update task successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                id: 1
                createdAt: 2022-10-26T15:50:29.970Z
                updatedAt: 2022-10-26T15:50:29.970Z
                title: Nau com
                description: nau ngon
                deadline: 2022-04-07T17:00:00.000Z
                priority: 100
                isDone: false
                userId: 1
        "401":
          description: Update task failed (Unauthorized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
              example:
                statusCode: 401
                message: Unauthorized
      security:
      - BearerAuth: []
components:
  schemas:
    UserInformation:
      type: object
      properties:
        email:
          type: string
          example: anhduydp1238@gmail.com
        password:
          type: string
          example: anhduy123
        firstName:
          type: string
          example: Anh
        lastName:
          type: string
          example: Duy
        role:
          type: integer
          example: 1
    TaskInformation:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        title:
          type: string
          example: Nau com
        description:
          type: string
          example: Nau that ngon
        deadline:
          type: string
          example: 04/08/2022
        priority:
          type: integer
          example: 100
    auth_signin_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    inline_response_200:
      type: object
      properties:
        access_token:
          type: string
    inline_response_403:
      type: object
      properties:
        statusCode:
          type: boolean
        message:
          type: string
        error:
          type: string
    inline_response_200_1:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: integer
    inline_response_200_2:
      properties:
        id:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
